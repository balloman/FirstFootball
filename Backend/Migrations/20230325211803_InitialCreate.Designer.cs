// <auto-generated />
using FirstFootball.Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FirstFootball.Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20230325211803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FirstFootball.Backend.Models.Fixture", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("AwayScore")
                        .HasColumnType("integer")
                        .HasColumnName("away_score");

                    b.Property<string>("AwayTeamName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("away_team_name");

                    b.Property<Instant>("DatePosted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_posted");

                    b.Property<int>("HomeScore")
                        .HasColumnType("integer")
                        .HasColumnName("home_score");

                    b.Property<string>("HomeTeamName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("home_team_name");

                    b.Property<int>("MatchWeek")
                        .HasColumnType("integer")
                        .HasColumnName("match_week");

                    b.HasKey("Id")
                        .HasName("pk_fixtures");

                    b.HasIndex("AwayTeamName")
                        .HasDatabaseName("ix_fixtures_away_team_name");

                    b.HasIndex("DatePosted")
                        .HasDatabaseName("ix_fixtures_date_posted");

                    b.HasIndex("HomeTeamName")
                        .HasDatabaseName("ix_fixtures_home_team_name");

                    b.ToTable("fixtures", (string)null);
                });

            modelBuilder.Entity("FirstFootball.Backend.Models.Team", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Name")
                        .HasName("pk_teams");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("FirstFootball.Backend.Models.Fixture", b =>
                {
                    b.HasOne("FirstFootball.Backend.Models.Team", "AwayTeam")
                        .WithMany("AwayFixtures")
                        .HasForeignKey("AwayTeamName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fixtures_teams_away_team_temp_id");

                    b.HasOne("FirstFootball.Backend.Models.Team", "HomeTeam")
                        .WithMany("HomeFixtures")
                        .HasForeignKey("HomeTeamName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fixtures_teams_home_team_temp_id1");

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("FirstFootball.Backend.Models.Team", b =>
                {
                    b.Navigation("AwayFixtures");

                    b.Navigation("HomeFixtures");
                });
#pragma warning restore 612, 618
        }
    }
}
